<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="BackPropagation" script:language="StarBasic">REM  *****  BASIC  *****

&apos; 12242016

&apos; Neural Network trainig parameters.
Global oNeuralNet As Object

Global paramsBPROPLearningRate As Double
Global paramsBPROPMomentum As Double
Global paramsRPROPIncreaseFactor As Double
Global paramsRPROPDecreaseFactor As Double
Global paramsRPROPDeltaMin As Double
Global paramsRPROPDeltaMax As Double
Global paramsRPROPDeltaInit As Double
Global paramsSCGSigma As Double
Global paramsSCGLambda As Double

Global ErrorArray() As Double

&apos; Main Form parameters
Global ObjIndex As Long
Global AlgIndex As Long
Global TrainDataRange As String
Global CVDataRange As String
Global TestDataRange As String
Global RandomSeed As Long
Global TrainingEpoches As Long
Global TrainingTimes As Long
Global FirstLoad As Long
Global OutputLayer As Long

&apos; The dialog is kept in a global variable so that other subroutines can access it (below).
Private oDialog As Object
Public nDialog As Object
&apos; oDestField is kept in a global variable so that it is available to the the range selection listener
&apos; routine, and it knows which edit box is the destination for the selection string.
private oDestField as object
&apos; bSelecting is the variable whose value gets changed so that a loop can be exited when selecting a range
&apos; has finished.
private bSelecting as boolean
&apos; This variable is so that the dialog can be endExecuted under program control, so that the range selection listener 
&apos; will work under both Windows and Linux, and reactivated when required.
private bDialogFinished as boolean
 
 
&apos;==========================================================================================================
Sub Workbook_Open()
   paramsBPROPLearningRate = 0.5
   paramsBPROPMomentum = 0.1
   paramsRPROPIncreaseFactor = 1.2
   paramsRPROPDecreaseFactor = 0.5
   paramsRPROPDeltaMin = 0.000001
   paramsRPROPDeltaMax = 50
   paramsRPROPDeltaInit = 0.1
   paramsSCGSigma = 0.0001
   paramsSCGLambda = 0.000001
   ObjIndex = 0
   AlgIndex = 0
   TrainDataRange = &quot;&quot;
   CVDataRange = &quot;&quot;
   TestDataRange = &quot;&quot;
   RandomSeed = 0
   TrainingEpoches = 0
   TrainingTimes = 0
   oNeuralNet = CreateUnoService( &quot;neuronica.BackProp&quot; )
   FirstLoad = 1
   ErrorArray = DimArray(0,0)
End Sub
 
Sub Main()

If Not GetFrontCalcDocoument() Then
	MsgBox &quot;The frontmost window must be a Spreadsheet document in order to use Neuronica.&quot;, 16, &quot;Neuronica&quot;
	Exit Sub
EndIf

If FirstLoad &lt;&gt; 1 Then
  Workbook_Open()
EndIf

&apos; Make sure this library, with its dialog is loaded.
DialogLibraries.LoadLibrary( &quot;Neuronica&quot; )
&apos; Create the dialog object.
oDialog = createUnoDialog( DialogLibraries.GetByName( &quot;Neuronica&quot; ).GetByName( &quot;dlgBackPropagation&quot; ))

CheckControlsEnabled()

oDialog.GetControl(&quot;tfNetworkStructure&quot;).setText(GetNetworkStructure())
oDialog.GetControl(&quot;cbAlg&quot;).selectItemPos(AlgIndex,true)
oDialog.GetControl(&quot;nfRandomSeed&quot;).Value = RandomSeed
oDialog.GetControl(&quot;nfTrainingEpoches&quot;).Value = TrainingEpoches
oDialog.GetControl(&quot;nfTrainingTimes&quot;).Value = TrainingTimes
oDialog.GetControl(&quot;fldTrainData&quot;).setText(TrainDataRange)
oDialog.GetControl(&quot;fldCVData&quot;).setText(CVDataRange)
oDialog.GetControl(&quot;fldTestData&quot;).setText(TestDataRange)
oDialog.GetControl(&quot;nfOutputLayer&quot;).Value = OutputLayer
oDialog.GetControl(&quot;nfOutputLayer&quot;).setMax(oNeuralNet.getLayersCount())

&apos; Display the dialog.
&apos; This routine call does not return until the dialog is dismissed.
do
   bDialogFinished = true
   oDialog.Execute()
loop until bDialogFinished      
&apos; Execution does not reach this point until the dialog is dismissed.
End Sub

Sub CheckControlsEnabled
If oNeuralNet.getLayersCount() &gt; 0 Then 
	oDialog.GetControl(&quot;nfRandomSeed&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;FrameControlTrain&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnTrainDataRange&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;fldTrainData&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;cbAlg&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;nfTrainingEpoches&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;nfTrainingTimes&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnParameters&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnCVDataRange&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;fldCVData&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnTrain&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;FrameControlTest&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnTestDataRange&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;fldTestData&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;nfOutputLayer&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnTest&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;btnSave&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label1&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label2&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label3&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label4&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label5&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label6&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label7&quot;).Model.Enabled = true
	oDialog.GetControl(&quot;Label8&quot;).Model.Enabled = true
End If

End Sub


&apos;========================================================================================================== 
&apos;The following routines for range selection were improved (actually made to work)
&apos;with input from Jim Thompson and with concepts in a thread by Danad:
&apos;http://www.oooforum.org/forum/viewtopic.php?t=6160
sub subEventShrink (oEvent)
&apos;Called when Rng button clicked
&apos;Uses module variables: oSpreadsheetView, oDialog, oRangeSelectionListener, oDestRange
dim mRangeSelection, sField as string

sField =  oEvent.source.model.tag
oDestField = oDialog.getControl(sField)
SetPropertyValue( mRangeSelection, &quot;InitialValue&quot;, oDestField.text)
SetPropertyValue( mRangeSelection, &quot;Title&quot;, oDialog.title &amp; &quot; &quot; &amp; sField )
SetPropertyValue( mRangeSelection, &quot;CloseOnMouseRelease&quot;, true )

&apos;The order of starting the range selection and hiding the dialog is important it must be as follows
oDocCtrl = oCalcDoc.getCurrentController()
oRangeSelectionListener = CreateUnoListener( &quot;RangeSelectionListener_&quot;,&quot;com.sun.star.sheet.XRangeSelectionListener&quot; )
oDocCtrl.addRangeSelectionListener( oRangeSelectionListener ) &apos; Register the listener
bSelecting = true
bDialogFinished = false
oDialog.endExecute

oDocCtrl.startRangeSelection(mRangeSelection )
while bSelecting
wend
oDocCtrl.removeRangeSelectionListener(oRangeSelectionListener)
end sub

Sub RangeSelectionListener_done(oRangeSelectionEvent as new com.sun.star.sheet.RangeSelectionEvent)
&apos;Uses module variables: oSpreadsheetView, oRangeSelectionListener, oDestField, oDialog
&apos;Called when the range selection is done (clicking the icon at right end)

oDestField.text = oRangeSelectionEvent.RangeDescriptor
bSelecting = false

Select Case oDestField.Model.Name
Case &quot;fldTrainData&quot;: 
	TrainDataRange = oDestField.text
Case &quot;fldCVData&quot;: 
	CVDataRange = oDestField.text
Case &quot;fldTestData&quot;: 
	TestDataRange = oDestField.text
End Select
&apos;oDialog.visible=true
&apos;oDialog.enable = true
end sub

Sub RangeSelectionListener_aborted(oRangeSelectionEvent as new com.sun.star.sheet.RangeSelectionEvent)
&apos;Uses module variables: oSpreadsheetView, oDialog, oRangeSelectionListener
&apos;Called when the range selection is cancelled (clicking X at top right)
bSelecting = false
&apos;oDialog.visible=true
&apos;oDialog.enable = true
end sub

Sub RangeSelectionListener_disposing()
&apos;nothing to do
end sub

&apos;==========================================================================================================

Sub btnCreate_Clicked()

NetworkStructure = oDialog.GetControl(&quot;tfNetworkStructure&quot;).Text
CreateResult = oNeuralNet.CreateNetwork(NetworkStructure)

If CreateResult = 1 Then
	oDialog.GetControl(&quot;lblStatus&quot;).setText(&quot;OK&quot;)
	CheckControlsEnabled()
Else
	oDialog.GetControl(&quot;lblStatus&quot;).setText(&quot;Fail&quot;)
End If

OutputLayer = oNeuralNet.getLayersCount()
oDialog.GetControl(&quot;nfOutputLayer&quot;).setMax(OutputLayer)
oDialog.GetControl(&quot;nfOutputLayer&quot;).Value = OutputLayer
End sub


Public Function GetNetworkStructure() As String
Dim StructureString As String
Dim LayersCount As Long

LayersCount = oNeuralNet.getLayersCount()
StructureString = &quot;&quot;

If LayersCount = 0 Then
    GetNetworkStructure = &quot;&quot;
Else
    For i = 0 To LayersCount - 2
        StructureString = StructureString &amp; oNeuralNet.getLayer(i) &amp; &quot;.&quot;
    Next i
    GetNetworkStructure = StructureString &amp; oNeuralNet.getLayer(LayersCount - 1)
End If

End Function

Sub btnOk_ParamBProp_Clicked()
	paramsBPROPLearningRate = nDialog.GetControl(&quot;nfLearningRate&quot;).Value
	paramsBPROPMomentum = nDialog.GetControl(&quot;nfMomentum&quot;).Value
	nDialog.endExecute()
End Sub

Sub btnOk_ParamRProp_Clicked()
	paramsRPROPIncreaseFactor = nDialog.GetControl(&quot;nfIncreaseFactor&quot;).Value
	paramsRPROPDecreaseFactor = nDialog.GetControl(&quot;nfDecreaseFactor&quot;).Value
	paramsRPROPDeltaMin = nDialog.GetControl(&quot;nfDeltaMin&quot;).Value
	paramsRPROPDeltaMax = nDialog.GetControl(&quot;nfDeltaMax&quot;).Value 
	paramsRPROPDeltaInit = nDialog.GetControl(&quot;nfDeltaInit&quot;).Value
	nDialog.endExecute()
End Sub

Sub btnOk_ParamSCG_Clicked()
	paramsSCGSigma = nDialog.GetControl(&quot;nfSigma&quot;).Value
	paramsSCGLambda = nDialog.GetControl(&quot;nfLambda&quot;).Value
	nDialog.endExecute()
End Sub

Sub btnInit_Clicked()
End Sub

Sub btnParameters_Clicked()
Dim DlgName As String

Select Case oDialog.GetControl(&quot;cbAlg&quot;).getSelectedItemPos()
Case 0: DlgName = &quot;dlgParamBProp&quot;
Case 1: DlgName = &quot;dlgParamRProp&quot;
Case 2: DlgName = &quot;dlgParamSCG&quot;
End Select

DialogLibraries.LoadLibrary( &quot;Neuronica&quot; )
nDialog = createUnoDialog( DialogLibraries.GetByName( &quot;Neuronica&quot; ).GetByName( DlgName ))

Select Case oDialog.GetControl(&quot;cbAlg&quot;).getSelectedItemPos()
Case 0: 
	nDialog.GetControl(&quot;nfLearningRate&quot;).Value = paramsBPROPLearningRate
	nDialog.GetControl(&quot;nfMomentum&quot;).Value = paramsBPROPMomentum
Case 1: 
	nDialog.GetControl(&quot;nfIncreaseFactor&quot;).Value = paramsRPROPIncreaseFactor
	nDialog.GetControl(&quot;nfDecreaseFactor&quot;).Value = paramsRPROPDecreaseFactor
	nDialog.GetControl(&quot;nfDeltaMin&quot;).Value = paramsRPROPDeltaMin
	nDialog.GetControl(&quot;nfDeltaMax&quot;).Value = paramsRPROPDeltaMax
	nDialog.GetControl(&quot;nfDeltaInit&quot;).Value = paramsRPROPDeltaInit
Case 2:
	nDialog.GetControl(&quot;nfSigma&quot;).Value = paramsSCGSigma
	nDialog.GetControl(&quot;nfLambda&quot;).Value = paramsSCGLambda
End Select

nDialog.Execute()
End Sub

Sub btnSave_Clicked()
    Dim LayersCount As Long
    Dim WeightsCount As Long
    Dim oDoc As Object
    Dim oSheet As Object
    Dim sSheetName As String
    Dim i As Long
    Dim YPos As Long
        
    oDoc = ThisComponent
	LayersCount = oNeuralNet.getLayersCount()
	WeightsCount = oNeuralNet.getWeightsCount()
	
	If LayersCount &gt; 0 Then 

&apos;-- Save header
		CurrentXPos = 0
		i = 1
		Do
			sSheetName = &quot;Neural&quot; &amp; CStr(i)
			i = i + 1
		Loop While oDoc.Sheets.hasByName(sSheetName)
		oDoc.Sheets.insertByName(sSheetName, oDoc.createInstance(&quot;com.sun.star.sheet.Spreadsheet&quot;))
		oSheet = oDoc.Sheets.getByName(sSheetName)
		oDoc.currentController.setActiveSheet(oSheet)
		oSheet.getCellByPosition(0, 0).setString(&quot;Backpropagation Neural Network&quot;)

&apos; Save network structure
		YPos = 2
		oSheet.getCellByPosition(0, YPos).setString(&quot;STRUCTURE&quot;)

        For i = 0 To LayersCount - 1
			oSheet.getCellByPosition(0, YPos + 1 + i).setString(&quot;Layer&quot; &amp; CStr(i))
			oSheet.getCellByPosition(1, YPos + 1 + i).setValue(oNeuralNet.GetLayer(i))
        Next i

&apos; Save network weights
		YPos = YPos + LayersCount + 2
		oSheet.getCellByPosition(0, YPos).setString(&quot;WEIGHTS&quot;)
        For i = 0 To WeightsCount - 1
			oSheet.getCellByPosition(0, YPos + 1 + i).setString(&quot;Weight&quot; &amp; CStr(i))
			oSheet.getCellByPosition(1, YPos + 1 + i).setValue(oNeuralNet.GetWeight(i))
        Next i

&apos; Save train parameters
		YPos = YPos + WeightsCount + 2
		oSheet.getCellByPosition(0, YPos).setString(&quot;PARAMETERS&quot;)
		oSheet.getCellByPosition(0, YPos + 1).setString(&quot;RandomSeed&quot;)
		oSheet.getCellByPosition(1, YPos + 1).setValue(oDialog.GetControl(&quot;nfRandomSeed&quot;).Value)
		oSheet.getCellByPosition(0, YPos + 2).setString(&quot;TrainSet&quot;)
		oSheet.getCellByPosition(1, YPos + 2).setString(oDialog.GetControl(&quot;fldTrainData&quot;).getText())
		oSheet.getCellByPosition(0, YPos + 3).setString(&quot;Algorithm&quot;)
		Select Case oDialog.GetControl(&quot;cbAlg&quot;).getSelectedItemPos()
		Case 0: 
			oSheet.getCellByPosition(1, YPos + 3).setString(&quot;BProp&quot;)
			oSheet.getCellByPosition(0, YPos + 4).setString(&quot;LearningRate&quot;)
			oSheet.getCellByPosition(1, YPos + 4).setValue(paramsBPROPLearningRate)
			oSheet.getCellByPosition(0, YPos + 5).setString(&quot;Momentum&quot;)
			oSheet.getCellByPosition(1, YPos + 5).setValue(paramsBPROPMomentum)
			YPos = YPos + 6
		Case 1: 
			oSheet.getCellByPosition(1, YPos + 3).setString(&quot;RProp&quot;)
			oSheet.getCellByPosition(0, YPos + 4).setString(&quot;IncreaseFactor&quot;)
			oSheet.getCellByPosition(1, YPos + 4).setValue(paramsRPROPIncreaseFactor)
			oSheet.getCellByPosition(0, YPos + 5).setString(&quot;DecreaseFactor&quot;)
			oSheet.getCellByPosition(1, YPos + 5).setValue(paramsRPROPDecreaseFactor)
			oSheet.getCellByPosition(0, YPos + 6).setString(&quot;DeltaMin&quot;)
			oSheet.getCellByPosition(1, YPos + 6).setValue(paramsRPROPDeltaMin)
			oSheet.getCellByPosition(0, YPos + 7).setString(&quot;DeltaMax&quot;)
			oSheet.getCellByPosition(1, YPos + 7).setValue(paramsRPROPDeltaMax)
			oSheet.getCellByPosition(0, YPos + 8).setString(&quot;DeltaInit&quot;)
			oSheet.getCellByPosition(1, YPos + 8).setValue(paramsRPROPDeltaInit)
			YPos = YPos + 9
		Case 2: 
			oSheet.getCellByPosition(1, YPos + 3).setString(&quot;SCG&quot;)
			oSheet.getCellByPosition(0, YPos + 4).setString(&quot;Sigma&quot;)
			oSheet.getCellByPosition(1, YPos + 4).setValue(paramsSCGSigma)
			oSheet.getCellByPosition(0, YPos + 5).setString(&quot;Lambda&quot;)
			oSheet.getCellByPosition(1, YPos + 5).setValue(paramsSCGLambda)
			YPos = YPos + 6
		End Select

		oSheet.getCellByPosition(0, YPos).setString(&quot;TrainingEpoches&quot;)
		oSheet.getCellByPosition(1, YPos).setValue(TrainingEpoches)
		oSheet.getCellByPosition(0, YPos + 1).setString(&quot;TrainingTimes&quot;)
		oSheet.getCellByPosition(1, YPos + 1).setValue(TrainingTimes)
		oSheet.getCellByPosition(0, YPos + 2).setString(&quot;CVSet&quot;)
		oSheet.getCellByPosition(1, YPos + 2).setString(oDialog.GetControl(&quot;fldCVData&quot;).getText())
		oSheet.getCellByPosition(0, YPos + 3).setString(&quot;TestSet&quot;)
		oSheet.getCellByPosition(1, YPos + 3).setString(oDialog.GetControl(&quot;fldTestData&quot;).getText())
		oSheet.getCellByPosition(0, YPos + 4).setString(&quot;OutputLayer&quot;)
		oSheet.getCellByPosition(1, YPos + 4).setValue(OutputLayer)

&apos; Save Error dynamics   
		YPos = 0     
		oSheet.getCellByPosition(3, YPos).setString(&quot;ERROR&quot;)
	    For i = 1 To UBound(ErrorArray, 2)
			oSheet.getCellByPosition(3, i).setValue(ErrorArray(1, i))
			oSheet.getCellByPosition(4, i).setValue(ErrorArray(2, i))
			oSheet.getCellByPosition(5, i).setValue(ErrorArray(3, i))
        Next i
        		
	Else
		MsgBox &quot;No network for saving&quot;
	Endif
End Sub

Sub btnLoad_Clicked()
    Dim LayersCount As Long
    Dim WeightsCount As Long
    Dim StartCell As String
    Dim WeightPtr As Long
    Dim Inputs As Long
    Dim Hiddens As Long
    Dim Outputs As Long
    Dim oDoc As Object
    Dim oSheet As Object
    Dim StructureString As String
    Dim i As Long
    Dim YPos As Long

	On Error GoTo ErrorHandler

	oSheet = ThisComponent.getCurrentController().getActiveSheet()
    i = 0
    While oSheet.getCellByPosition(1, 3 + i).getValue() &gt; 0
      i = i + 1
    Wend
    LayersCount = i

    YPos = 2
   	StructureString = &quot;&quot;
	If LayersCount = 0 Then
    	StructureString = &quot;&quot;
	Else
    	For i = 0 To LayersCount - 2
        	StructureString = StructureString &amp; oSheet.getCellByPosition(1, YPos + 1 + i).getValue() &amp; &quot;.&quot;
	    Next i
	   	StructureString = StructureString &amp; oSheet.getCellByPosition(1, YPos + 1 + i).getValue()
	End If

	CreateResult = oNeuralNet.CreateNetwork(StructureString)

	If CreateResult = 1 Then
		oDialog.GetControl(&quot;lblStatus&quot;).setText(&quot;OK&quot;)
		CheckControlsEnabled()
		NetworkStructure = GetNetworkStructure()
		oDialog.GetControl(&quot;tfNetworkStructure&quot;).setText(NetworkStructure)		
		OutputLayer = oNeuralNet.getLayersCount()
		oDialog.GetControl(&quot;nfOutputLayer&quot;).setMax(OutputLayer)

&apos; Load network weights
		WeightsCount = oNeuralNet.getWeightsCount()
		YPos = YPos + LayersCount + 2
        For i = 0 To WeightsCount - 1
			oNeuralNet.setWeight(i, oSheet.getCellByPosition(1, YPos + 1 + i).getValue())
        Next i

&apos; Load train parameters
		YPos = YPos + WeightsCount + 2
		RandomSeed = oSheet.getCellByPosition(1, YPos + 1).getValue()
		oDialog.GetControl(&quot;nfRandomSeed&quot;).setValue(RandomSeed)
		TrainDataRange = oSheet.getCellByPosition(1, YPos + 2).getString()
		oDialog.GetControl(&quot;fldTrainData&quot;).setText(TrainDataRange)

		Select Case oSheet.getCellByPosition(1, YPos + 3).getString()
		Case &quot;BProp&quot;: 
			paramsBPROPLearningRate = oSheet.getCellByPosition(1, YPos + 4).getValue()
			paramsBPROPMomentum = oSheet.getCellByPosition(1, YPos + 5).getValue()
			YPos = YPos + 6
		Case &quot;RProp&quot;: 
			paramsRPROPIncreaseFactor = oSheet.getCellByPosition(1, YPos + 4).getValue()
			paramsRPROPDecreaseFactor = oSheet.getCellByPosition(1, YPos + 5).getValue()
			paramsRPROPDeltaMin = oSheet.getCellByPosition(1, YPos + 6).getValue()
			paramsRPROPDeltaMax = oSheet.getCellByPosition(1, YPos + 7).getValue()
			paramsRPROPDeltaInit = oSheet.getCellByPosition(1, YPos + 8).getValue()
			YPos = YPos + 9
		Case &quot;SCG&quot;: 
			paramsSCGSigma = oSheet.getCellByPosition(1, YPos + 4).getValue()
			paramsSCGLambda = oSheet.getCellByPosition(1, YPos + 5).getValue()
			YPos = YPos + 6
		End Select
&apos;
		TrainingEpoches = oSheet.getCellByPosition(1, YPos).getValue()
		oDialog.GetControl(&quot;nfTrainingEpoches&quot;).setValue(TrainingEpoches)
		TrainingTimes = oSheet.getCellByPosition(1, YPos + 1).getValue()
		oDialog.GetControl(&quot;nfTrainingTimes&quot;).setValue(TrainingTimes)
		CVDataRange = oSheet.getCellByPosition(1, YPos + 2).getString()
		oDialog.GetControl(&quot;fldCVData&quot;).setText(CVDataRange)
		TestDataRange = oSheet.getCellByPosition(1, YPos + 3).getString()
		oDialog.GetControl(&quot;fldTestData&quot;).setText(TestDataRange)
		OutputLayer = oSheet.getCellByPosition(1, YPos + 4).getValue()
		oDialog.GetControl(&quot;nfOutputLayer&quot;).setValue(OutputLayer)
		
	Else
		oDialog.GetControl(&quot;lblStatus&quot;).setText(&quot;Fail&quot;)
	End If
 
Exit Sub
ErrorHandler:
	MsgBox &quot;Error while loading...&quot;
End Sub

Sub LoadDataset(DatasetStr As String)

Dim oSheet As Object
Dim oRangeAddr As Object
Dim RangeStr As String
Dim Row, Col As Long
Dim LayersCount As Long
Dim firstLayer, lastLayer As Long

On Error GoTo ErrorHandler

RangeStr = oDialog.GetControl(DatasetStr).getText()
oSheet = ThisComponent.Sheets.getByName(Mid(RangeStr,2,InStr(RangeStr, &quot;.&quot;)-2))
oRangeAddr = oSheet.getCellRangeByName(RangeStr).RangeAddress

LayersCount = oNeuralNet.getLayersCount()
firstLayer = oNeuralNet.getLayer(0)
lastLayer = oNeuralNet.getLayer(LayersCount - 1)

If firstLayer + lastLayer &lt;&gt; oRangeAddr.endColumn - oRangeAddr.startColumn + 1 Then Goto ErrorHandler 

oNeuralNet.createPatterns(oRangeAddr.endRow - oRangeAddr.startRow + 1)

For Row = 0 to oRangeAddr.endRow - oRangeAddr.startRow
  For Col = 0 to oRangeAddr.endColumn - oRangeAddr.startColumn
    oNeuralNet.setPatternValue(Row, Col, oSheet.getCellByPosition(Col + oRangeAddr.startColumn, Row + oRangeAddr.startRow).getValue())
  Next Col
Next Row

Exit Sub
ErrorHandler:
	MsgBox &quot;Error in data range! Please check it.&quot;
End Sub

Sub btnTrain_Clicked()

Dim oSheet As Object
Dim oRangeAddr As Object
Dim RangeStr As String
Dim Row, Col As Long
Dim LayersCount As Long
Dim firstLayer, lastLayer As Long
Dim CurrentEpoch As Long
Dim ProgressInc As Long

On Error GoTo ErrorHandler

TrainingEpoches = oDialog.GetControl(&quot;nfTrainingEpoches&quot;).Value
TrainingTimes = oDialog.GetControl(&quot;nfTrainingTimes&quot;).Value
ErrorArray = DimArray(3, TrainingTimes)
CurrentEpoch = 0

ProgressValue = 0
ProgressInc = 100 / TrainingTimes
oProgressBar = oDialog.getModel().getByName(&quot;pbTrain&quot;)
oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, 0)

oNeuralNet.initializeNetwork(oDialog.GetControl(&quot;nfRandomSeed&quot;).Value)

Select Case oDialog.GetControl(&quot;cbAlg&quot;).getSelectedItemPos()
Case 0: 
	For i = 1 to TrainingTimes
		LoadDataset(&quot;fldTrainData&quot;)
		oNeuralNet.TrainBPROP(TrainingEpoches, 0, paramsBPROPLearningRate, paramsBPROPMomentum)
		CurrentEpoch = CurrentEpoch + TrainingEpoches
		ErrorArray(1, i) = CurrentEpoch
		ErrorArray(2, i) = oNeuralNet.getError()
		If (oDialog.GetControl(&quot;fldCVData&quot;).Text &lt;&gt; &quot;&quot;) Then
			LoadDataset(&quot;fldCVData&quot;)
			ErrorArray(3, i) = oNeuralNet.getError()
		Else
			ErrorArray(3, i) = 0
		End If
	ProgressValue = ProgressValue + ProgressInc
	oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, ProgressValue)
	Next i	
Case 1: 
	For i = 1 to TrainingTimes
		LoadDataset(&quot;fldTrainData&quot;)
		oNeuralNet.TrainRPROP(TrainingEpoches, 0, paramsRPROPIncreaseFactor, paramsRPROPDecreaseFactor, paramsRPROPDeltaMin, paramsRPROPDeltaMax, paramsRPROPDeltaInit)
		CurrentEpoch = CurrentEpoch + TrainingEpoches
		ErrorArray(1, i) = CurrentEpoch
		ErrorArray(2, i) = oNeuralNet.getError()
		If (oDialog.GetControl(&quot;fldCVData&quot;).Text &lt;&gt; &quot;&quot;) Then
			LoadDataset(&quot;fldCVData&quot;)
			ErrorArray(3, i) = oNeuralNet.getError()
		Else
			ErrorArray(3, i) = 0
		End If
	ProgressValue = ProgressValue + ProgressInc
	oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, ProgressValue)
	Next i	
Case 2: 
	For i = 1 to TrainingTimes
		LoadDataset(&quot;fldTrainData&quot;)
		oNeuralNet.TrainSCG(TrainingEpoches, 0, paramsSCGSigma, paramsSCGLambda)
		CurrentEpoch = CurrentEpoch + TrainingEpoches
		ErrorArray(1, i) = CurrentEpoch
		ErrorArray(2, i) = oNeuralNet.getError()
		If (oDialog.GetControl(&quot;fldCVData&quot;).Text &lt;&gt; &quot;&quot;) Then
			LoadDataset(&quot;fldCVData&quot;)
			ErrorArray(3, i) = oNeuralNet.getError()
		Else
			ErrorArray(3, i) = ErrorArray(2, i)
		End If
	ProgressValue = ProgressValue + ProgressInc
	oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, ProgressValue)
	Next i	
End Select
oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, 100)
MsgBox &quot;Training complete. MSE=&quot; &amp; oNeuralNet.getError()
oProgressBar.setPropertyValue(&quot;ProgressValue&quot;, 0)
Exit Sub
ErrorHandler:
	MsgBox &quot;Error in data range! Please check it.&quot;
End Sub

Sub btnTest_Clicked()

Dim oSheet As Object
Dim oRangeAddr As Object
Dim RangeStr As String

On Error GoTo ErrorHandler

RangeStr = oDialog.GetControl(&quot;fldTestData&quot;).getText()
oSheet = ThisComponent.Sheets.getByName(Mid(RangeStr,2,InStr(RangeStr, &quot;.&quot;)-2))
oRangeAddr = oSheet.getCellRangeByName(RangeStr).RangeAddress

LayersCount = oNeuralNet.getLayersCount()
firstLayer = oNeuralNet.getLayer(0)
lastLayer = oNeuralNet.getLayer(oDialog.GetControl(&quot;nfOutputLayer&quot;).getValue()-1)

NodesCount = 0
For i = 0 To oDialog.GetControl(&quot;nfOutputLayer&quot;).getValue()-1
  NodesCount = NodesCount + oNeuralNet.getLayer(i)
Next i
        
If firstLayer &lt;&gt; oRangeAddr.endColumn - oRangeAddr.startColumn + 1 Then Goto ErrorHandler 

oNeuralNet.createPatterns(oRangeAddr.endRow - oRangeAddr.startRow + 1)

For Row = 0 to oRangeAddr.endRow - oRangeAddr.startRow
  For Col = 0 to oRangeAddr.endColumn - oRangeAddr.startColumn
    oNeuralNet.setPatternValue(Row, Col, oSheet.getCellByPosition(Col + oRangeAddr.startColumn, Row + oRangeAddr.startRow).getValue())
  Next Col
  oNeuralNet.test(Row)
  For Col = oRangeAddr.endColumn - oRangeAddr.startColumn + 1 to oRangeAddr.endColumn - oRangeAddr.startColumn + lastLayer
     oSheet.getCellByPosition(Col + oRangeAddr.startColumn, Row + oRangeAddr.startRow).setValue(oNeuralNet.getActivation(NodesCount - 1 - oRangeAddr.endColumn + oRangeAddr.startColumn - lastLayer + Col))
  Next Col
Next Row

Exit Sub
ErrorHandler:
	MsgBox &quot;Error in data range! Please check it.&quot;
End Sub

Sub cbAlg_Changed()
	AlgIndex = oDialog.GetControl(&quot;cbAlg&quot;).getSelectedItemPos()
End Sub

Sub nfRandomSeed_Changed()
	RandomSeed = oDialog.GetControl(&quot;nfRandomSeed&quot;).Value
End Sub

Sub nfTrainingEpoches_Changed()
	TrainingEpoches = oDialog.GetControl(&quot;nfTrainingEpoches&quot;).Value
End Sub

Sub nfTrainingTimes_Changed()
	TrainingTimes = oDialog.GetControl(&quot;nfTrainingTimes&quot;).Value
End Sub

Sub nfOutputLayer_Changed()
	OutputLayer = oDialog.GetControl(&quot;nfOutputLayer&quot;).Value
End Sub

Sub TestButton_Clicked()
	MsgBox oDialog.GetControl(&quot;fldTrainData&quot;).getText()
End Sub


</script:module>